---
title: "Error handling using an interactive parser"
description: "Example demonstrating error handling with an interactive LALR parser using Lark. Includes an example Python script and download links."
source_url: "https://github.com/lark-parser/lark/blob/acfe33d943a1310f3ca26145eb2896bc5c4955c9/docs/examples/advanced/error_handling.rst"
---

# Error handling using an interactive parser

## Navigation
- [Home](https://lark-parser.readthedocs.io/en/stable/index.html)
- [Examples for Lark](https://lark-parser.readthedocs.io/en/stable/examples/index.html)
- [Advanced Examples](https://lark-parser.readthedocs.io/en/stable/examples/advanced/index.html)
- [Edit on GitHub](https://github.com/lark-parser/lark/blob/acfe33d943a1310f3ca26145eb2896bc5c4955c9/docs/examples/advanced/error_handling.rst)
- [Previous](https://lark-parser.readthedocs.io/en/stable/examples/advanced/conf_earley.html "Earley’s dynamic lexer")
- [Next](https://lark-parser.readthedocs.io/en/stable/examples/advanced/reconstruct_json.html "Reconstruct a JSON")

## Note

Go to the end to download the full example code — error_handling.py: https://lark-parser.readthedocs.io/en/stable/_downloads/3a11fd47a1fb670a6759747d618a244e/error_handling.py, error_handling.ipynb: https://lark-parser.readthedocs.io/en/stable/_downloads/5a9e0a0dc353e4a9357e2204639f6c76/error_handling.ipynb

## Overview

This example demonstrates error handling using an interactive parser in LALR.

When the parser encounters an UnexpectedToken exception, it creates an interactive parser with the current parse-state and lets you control how to proceed step-by-step. When you’ve achieved the correct parse-state, you can resume the run by returning True.

## Example

```python
from lark import Token

from _json_parser import json_parser

def ignore_errors(e):
    if e.token.type == 'COMMA':
        # Skip comma
        return True
    elif e.token.type == 'SIGNED_NUMBER':
        # Try to feed a comma and retry the number
        e.interactive_parser.feed_token(Token('COMMA', ','))
        e.interactive_parser.feed_token(e.token)
        return True

    # Unhandled error. Will stop parse and raise exception
    return False

def main():
    s = "[0 1, 2,, 3,,, 4, 5 6 ]"
    res = json_parser.parse(s, on_error=ignore_errors)
    print(res)      # prints [0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0]

main()
```

## Downloads

- error_handling.py: https://lark-parser.readthedocs.io/en/stable/_downloads/3a11fd47a1fb670a6759747d618a244e/error_handling.py
- error_handling.ipynb: https://lark-parser.readthedocs.io/en/stable/_downloads/5a9e0a0dc353e4a9357e2204639f6c76/error_handling.ipynb

Gallery generated by Sphinx-Gallery

Versions: latest | stable

Links: PDF, HTML, EPUB
